{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/pages/AdminPage.js\",\n  _s = $RefreshSig$();\n// src/pages/AdminPage.js\nimport \"../components/admin/admin.css\";\nimport React, { useContext, useEffect, createContext, useState } from 'react';\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\n// import NotFound from './NotFound';\n\nimport Products from \"../components/admin/Products/Products\";\nimport Profiles from \"../components/admin/Profile/Profiles\";\nimport ProductDetails from \"../components/admin/Products/ProductDetails\";\nimport ProductUpload from \"../components/admin/Products/ProductUpload\";\nimport ProductAdd from \"../components/admin/Products/ProductAdd\";\nimport CategoryAdd from \"../components/admin/Categories/Add\";\nimport Dashboard from \"../components/admin/Dashboard\";\n// import AdminSidebar from \"../components/common/Sidebar/AdminSidebar\";\n// import NotFound from \"../pages/NotFound\";\nimport { AdminContext } from '../App';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const context = useContext(AdminContext);\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   if (!context.isLogin || !context.shop) {\n  //     navigate('/login');\n  //   }\n  // }, [context, navigate]);\n  const accessToken = localStorage.getItem(\"accessToken\");\n  console.log(\"Access\", context);\n  console.log(\"accessToken\", accessToken);\n\n  // useEffect(() => {\n  //   const U_Data = localStorage.getItem(\"userData\");\n  //   const Token = localStorage.getItem(\"accessToken\");\n\n  //   // if (U_Data) {\n  //   //   setUserData(U_Data);\n  //   //   setRole(JSON.parse(U_Data).role);\n  //   // }\n\n  //   // const checkAndRefreshToken = async () => {\n  //   //   if (Token) {\n  //   //     if (checkTokenExpiration(Token)) {\n  //   //       const newAccessToken = await refreshAccessToken();\n  //   //       if (newAccessToken) {\n  //   //         setAccessToken(newAccessToken);\n  //   //         setIsLogin(true);\n  //   //       } else {\n  //   //         setIsLogin(false);\n  //   //       }\n  //   //     } else {\n  //   //       setAccessToken(Token);\n  //   //       setIsLogin(true);\n  //   //     }\n  //   //   }\n  //   // };\n\n  //   // checkAndRefreshToken();\n  // }, [isLogin]);\n\n  // const params = useParams();\n  // console.log(params);\n  // const { isHideSidebarAndHeader, isToggleSidebar,isLogin,shop,isOnline,role } = useContext(MyContext);\n  // const accessToken = localStorage.getItem('accessToken');\n\n  const {\n    isHideSidebarAndHeader,\n    isToggleSidebar,\n    isLogin,\n    shop\n  } = useContext(AdminContext);\n  // console.log('isHideSidebarAndHeader',isHideSidebarAndHeader);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/category/add\",\n          element: /*#__PURE__*/_jsxDEV(CategoryAdd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/products\",\n          element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/details/:id\",\n          element: /*#__PURE__*/_jsxDEV(ProductDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/add\",\n          element: /*#__PURE__*/_jsxDEV(ProductAdd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/upload/:id\",\n          element: /*#__PURE__*/_jsxDEV(ProductUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"Km8k0LM6MfCHJfcFXqlrWueaInU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\n{/* <MyContext.Provider value={values}> */}\n//     {\n//       isHideSidebarAndHeader !== true &&\n//       <Header />\n//     }\n//     <div className='main d-flex'>\n//       {\n//         isHideSidebarAndHeader !== true &&\n//         <div className={`sidebarWrapper ${isToggleSidebar === true ? 'toggle' : ''}\"}>\n//           <Sidebar />\n//         </div>\n//       }\n//       <div className={`content ${isHideSidebarAndHeader===true && 'full'} ${isToggleSidebar === true ? 'toggle' : ''}`}>\n//       <Routes>\n//           <Route path=\"/\" element={isLogin && shop && accessToken ? <Navigate to=\"/dashboard\" /> : <Navigate to=\"/login\" />} />\n//           <Route path=\"/dashboard\" element={isLogin && shop && accessToken && isOnline ? <Dashboard /> : <Navigate to=\"/login\" />} />\n//           <Route path=\"/login\" element={!isLogin || !shop || !accessToken || !isOnline ? <Login /> : <Navigate to=\"/dashboard\" />} />\n//           <Route path=\"/signUp\" element={<SignUp />} />\n//           {/* categori */}\n//           <Route path=\"/category\" element={isLogin && shop && accessToken && isOnline ? <Products /> : <Navigate to=\"/login\" />} />\n//           {/* <Route path=\"/category/details/:id\" element={isLogin && shop && accessToken && isOnline ? <AddCategory /> : <Navigate to=\"/login\" />} /> */}\n//           <Route path=\"/category/add\" element={isLogin && shop && accessToken && isOnline ? <CategoryAdd /> : <Navigate to=\"/login\" />} />\n//           {/* <Route path=\"/category/upload/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductUpload /> : <Navigate to=\"/login\" />} /> */}\n//           {/* //product */}\n//           <Route path=\"/products\" element={isLogin && shop && accessToken && isOnline ? <Products /> : <Navigate to=\"/login\" />} />\n//           <Route path=\"/product/details/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductDetails /> : <Navigate to=\"/login\" />} />\n//           <Route path=\"/product/add\" element={isLogin && shop && accessToken && isOnline ? <ProductAdd /> : <Navigate to=\"/login\" />} />\n//           <Route path=\"/product/upload/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductUpload /> : <Navigate to=\"/login\" />} />\n//         </Routes>\n//       </div>\n//     </div>\n//     <ToastContainer />\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useContext","useEffect","createContext","useState","Route","Routes","Navigate","useNavigate","Products","Profiles","ProductDetails","ProductUpload","ProductAdd","CategoryAdd","Dashboard","AdminContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","context","navigate","accessToken","localStorage","getItem","console","log","isHideSidebarAndHeader","isToggleSidebar","isLogin","shop","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/pages/AdminPage.js"],"sourcesContent":["// src/pages/AdminPage.js\nimport \"../components/admin/admin.css\";\nimport React, { useContext,useEffect,createContext,useState } from 'react';\nimport { Route, Routes,Navigate,useNavigate } from 'react-router-dom';\n// import NotFound from './NotFound';\n\nimport Products from \"../components/admin/Products/Products\";\nimport Profiles from \"../components/admin/Profile/Profiles\";\nimport ProductDetails from \"../components/admin/Products/ProductDetails\";\nimport ProductUpload from \"../components/admin/Products/ProductUpload\";\nimport ProductAdd from \"../components/admin/Products/ProductAdd\";\nimport CategoryAdd from \"../components/admin/Categories/Add\";\n\nimport Dashboard from \"../components/admin/Dashboard\";\n// import AdminSidebar from \"../components/common/Sidebar/AdminSidebar\";\n// import NotFound from \"../pages/NotFound\";\nimport {AdminContext} from '../App'\n\nconst AdminPage = () => {\n  const context=useContext(AdminContext);\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   if (!context.isLogin || !context.shop) {\n  //     navigate('/login');\n  //   }\n  // }, [context, navigate]);\n  const accessToken = localStorage.getItem(\"accessToken\");\n\n  console.log(\"Access\",context)\n  console.log(\"accessToken\",accessToken)\n\n  // useEffect(() => {\n  //   const U_Data = localStorage.getItem(\"userData\");\n  //   const Token = localStorage.getItem(\"accessToken\");\n\n  //   // if (U_Data) {\n  //   //   setUserData(U_Data);\n  //   //   setRole(JSON.parse(U_Data).role);\n  //   // }\n\n  //   // const checkAndRefreshToken = async () => {\n  //   //   if (Token) {\n  //   //     if (checkTokenExpiration(Token)) {\n  //   //       const newAccessToken = await refreshAccessToken();\n  //   //       if (newAccessToken) {\n  //   //         setAccessToken(newAccessToken);\n  //   //         setIsLogin(true);\n  //   //       } else {\n  //   //         setIsLogin(false);\n  //   //       }\n  //   //     } else {\n  //   //       setAccessToken(Token);\n  //   //       setIsLogin(true);\n  //   //     }\n  //   //   }\n  //   // };\n\n  //   // checkAndRefreshToken();\n  // }, [isLogin]);\n  \n\n\n\n\n\n\n  // const params = useParams();\n  // console.log(params);\n  // const { isHideSidebarAndHeader, isToggleSidebar,isLogin,shop,isOnline,role } = useContext(MyContext);\n  // const accessToken = localStorage.getItem('accessToken');\n\n  const{ isHideSidebarAndHeader, isToggleSidebar,isLogin,shop}=useContext(AdminContext);\n  // console.log('isHideSidebarAndHeader',isHideSidebarAndHeader);\n  return (\n   \n    <div>\n     \n        <Routes>\n          {/* {isLogin && shop && accessToken ?( */}\n          <>\n            <Route path=\"/\" element={ <Dashboard /> } />\n            <Route path=\"/dashboard\" element={ <Dashboard />} />\n            {/* <Route path=\"/category\" element={ <Category /> } /> */}\n            <Route path=\"/category/add\" element={<CategoryAdd />} />\n            {/* <Route path=\"/category/add\" element={isLogin && shop && accessToken && isOnline ? <CategoryAdd /> : <Navigate to=\"/login\" />} /> */}\n            <Route path=\"/products\" element={<Products /> } />\n            <Route path=\"/product/details/:id\" element={ <ProductDetails /> } />\n            <Route path=\"/product/add\"  element={<ProductAdd /> }/>\n            <Route path=\"/product/upload/:id\" element={<ProductUpload />} />\n          </>\n            {/* ):(\n            <Route path=\"/\" element={<Navigate to=\"/user/home\" replace />} />\n          )}   */}\n        </Routes>\n       \n    </div>\n  );\n}\n\n\n{/* <MyContext.Provider value={values}> */}\n    //     {\n    //       isHideSidebarAndHeader !== true &&\n    //       <Header />\n    //     }\n    //     <div className='main d-flex'>\n    //       {\n    //         isHideSidebarAndHeader !== true &&\n    //         <div className={`sidebarWrapper ${isToggleSidebar === true ? 'toggle' : ''}\"}>\n    //           <Sidebar />\n    //         </div>\n    //       }\n    //       <div className={`content ${isHideSidebarAndHeader===true && 'full'} ${isToggleSidebar === true ? 'toggle' : ''}`}>\n    //       <Routes>\n    //           <Route path=\"/\" element={isLogin && shop && accessToken ? <Navigate to=\"/dashboard\" /> : <Navigate to=\"/login\" />} />\n    //           <Route path=\"/dashboard\" element={isLogin && shop && accessToken && isOnline ? <Dashboard /> : <Navigate to=\"/login\" />} />\n    //           <Route path=\"/login\" element={!isLogin || !shop || !accessToken || !isOnline ? <Login /> : <Navigate to=\"/dashboard\" />} />\n    //           <Route path=\"/signUp\" element={<SignUp />} />\n    //           {/* categori */}\n    //           <Route path=\"/category\" element={isLogin && shop && accessToken && isOnline ? <Products /> : <Navigate to=\"/login\" />} />\n    //           {/* <Route path=\"/category/details/:id\" element={isLogin && shop && accessToken && isOnline ? <AddCategory /> : <Navigate to=\"/login\" />} /> */}\n    //           <Route path=\"/category/add\" element={isLogin && shop && accessToken && isOnline ? <CategoryAdd /> : <Navigate to=\"/login\" />} />\n    //           {/* <Route path=\"/category/upload/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductUpload /> : <Navigate to=\"/login\" />} /> */}\n    //           {/* //product */}\n    //           <Route path=\"/products\" element={isLogin && shop && accessToken && isOnline ? <Products /> : <Navigate to=\"/login\" />} />\n    //           <Route path=\"/product/details/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductDetails /> : <Navigate to=\"/login\" />} />\n    //           <Route path=\"/product/add\" element={isLogin && shop && accessToken && isOnline ? <ProductAdd /> : <Navigate to=\"/login\" />} />\n    //           <Route path=\"/product/upload/:id\" element={isLogin && shop && accessToken && isOnline ? <ProductUpload /> : <Navigate to=\"/login\" />} />\n    //         </Routes>\n    //       </div>\n    //     </div>\n    //     <ToastContainer />\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}