{"ast":null,"code":"import axios from'axios';import{jwtDecode}from'jwt-decode';import{useEffect}from'react';import{baseURL_}from'../utils/env';// console.log('baseURL_',baseURL_)\n// Tạo một instance của axios\nconst api=axios.create({// baseURL: 'http://192.168.10.110:6969/v1',\nbaseURL:baseURL_// withCredentials: true,\n});const refreshAccessToken=async()=>{try{const response=await axios.post(\"\".concat(baseURL_,\"/auth/refresh\"),{withCredentials:true});const{accessToken}=response.data.newAccessToken;console.log('newAccessToken',response);if(response.status===true){localStorage.setItem('accessToken',response.data.newAccessToken);}return accessToken;}catch(error){console.error(\"Unable to refresh token\",error.response.data.message);// return null;\n}};// Thêm một interceptor vào request để thêm access token vào header\napi.interceptors.request.use(async config=>{const accessToken=localStorage.getItem('accessToken');if(accessToken){const date=new Date();const exp=jwtDecode(accessToken);if(exp.exp<date.getTime()/1000){const refreshToken=await refreshAccessToken();console.log('exp.exp',exp.exp);console.log('date:',date.getTime()/1000);console.log('refreshToken:',refreshToken);}config.headers['token']=\"Bearer \".concat(accessToken);}// console.log('config:',config);\nreturn config;},error=>{return Promise.reject(error);});let isRefreshing=false;// Thêm một interceptor vào response để xử lý làm mới token\napi.interceptors.response.use(response=>{return response;},async error=>{const originalRequest=error.config;console.log('originalRequest',originalRequest);// if (error.response.status === 401 && !originalRequest._retry) {\n//   originalRequest._retry = true;\n//   if (!isRefreshing) {\n//     isRefreshing = true;\n//     const newAccessToken = await refreshAccessToken();\n//     isRefreshing = false;\n//     if (newAccessToken) {\n//       localStorage.setItem('accessToken', newAccessToken);\n//       originalRequest.headers['token'] = `Bearer ${newAccessToken}`;\n//       return api(originalRequest);\n//     } else {\n//       console.error('Failed to refresh token.');\n//     }\n//   }\n// }\nreturn Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","jwtDecode","useEffect","baseURL_","api","create","baseURL","refreshAccessToken","response","post","concat","withCredentials","accessToken","data","newAccessToken","console","log","status","localStorage","setItem","error","message","interceptors","request","use","config","getItem","date","Date","exp","getTime","refreshToken","headers","Promise","reject","isRefreshing","originalRequest"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/api/api.js"],"sourcesContent":["import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { useEffect } from 'react';\nimport { baseURL_ } from '../utils/env';\n\n// console.log('baseURL_',baseURL_)\n// Tạo một instance của axios\nconst api = axios.create({\n\n  // baseURL: 'http://192.168.10.110:6969/v1',\n  baseURL: baseURL_,\n  // withCredentials: true,\n});\n\nconst refreshAccessToken = async () => {\n  try {\n    const response = await axios.post(`${baseURL_}/auth/refresh`,{withCredentials:true});\n    const { accessToken } = response.data.newAccessToken;\n    console.log('newAccessToken',response)\n    if(response.status===true){\n      localStorage.setItem('accessToken', response.data.newAccessToken);\n    }\n    return accessToken;\n  } catch (error) {\n    console.error(\"Unable to refresh token\", error.response.data.message);\n    // return null;\n  }\n};\n\n// Thêm một interceptor vào request để thêm access token vào header\napi.interceptors.request.use(\n  async (config) => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      const date=new Date();\n      const exp  = jwtDecode(accessToken);\n      if(exp.exp<date.getTime()/1000){\n        const refreshToken =await refreshAccessToken()\n        console.log('exp.exp',exp.exp)\n        console.log('date:',date.getTime()/1000)\n        console.log('refreshToken:',refreshToken)\n      }\n      config.headers['token'] = `Bearer ${accessToken}`;\n    }\n    // console.log('config:',config);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nlet isRefreshing = false;\n\n// Thêm một interceptor vào response để xử lý làm mới token\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    console.log('originalRequest',originalRequest)\n    // if (error.response.status === 401 && !originalRequest._retry) {\n    //   originalRequest._retry = true;\n\n    //   if (!isRefreshing) {\n    //     isRefreshing = true;\n    //     const newAccessToken = await refreshAccessToken();\n    //     isRefreshing = false;\n        \n    //     if (newAccessToken) {\n    //       localStorage.setItem('accessToken', newAccessToken);\n    //       originalRequest.headers['token'] = `Bearer ${newAccessToken}`;\n    //       return api(originalRequest);\n    //     } else {\n    //       console.error('Failed to refresh token.');\n    //     }\n    //   }\n    // }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,YAAY,CACtC,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,QAAQ,KAAQ,cAAc,CAEvC;AACA;AACA,KAAM,CAAAC,GAAG,CAAGJ,KAAK,CAACK,MAAM,CAAC,CAEvB;AACAC,OAAO,CAAEH,QACT;AACF,CAAC,CAAC,CAEF,KAAM,CAAAI,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,IAAAC,MAAA,CAAIP,QAAQ,kBAAgB,CAACQ,eAAe,CAAC,IAAI,CAAC,CAAC,CACpF,KAAM,CAAEC,WAAY,CAAC,CAAGJ,QAAQ,CAACK,IAAI,CAACC,cAAc,CACpDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAACR,QAAQ,CAAC,CACtC,GAAGA,QAAQ,CAACS,MAAM,GAAG,IAAI,CAAC,CACxBC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAEX,QAAQ,CAACK,IAAI,CAACC,cAAc,CAAC,CACnE,CACA,MAAO,CAAAF,WAAW,CACpB,CAAE,MAAOQ,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAACZ,QAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CACrE;AACF,CACF,CAAC,CAED;AACAjB,GAAG,CAACkB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,KAAO,CAAAC,MAAM,EAAK,CAChB,KAAM,CAAAb,WAAW,CAAGM,YAAY,CAACQ,OAAO,CAAC,aAAa,CAAC,CACvD,GAAId,WAAW,CAAE,CACf,KAAM,CAAAe,IAAI,CAAC,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrB,KAAM,CAAAC,GAAG,CAAI5B,SAAS,CAACW,WAAW,CAAC,CACnC,GAAGiB,GAAG,CAACA,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAC,YAAY,CAAE,KAAM,CAAAxB,kBAAkB,CAAC,CAAC,CAC9CQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAACa,GAAG,CAACA,GAAG,CAAC,CAC9Bd,OAAO,CAACC,GAAG,CAAC,OAAO,CAACW,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACxCf,OAAO,CAACC,GAAG,CAAC,eAAe,CAACe,YAAY,CAAC,CAC3C,CACAN,MAAM,CAACO,OAAO,CAAC,OAAO,CAAC,WAAAtB,MAAA,CAAaE,WAAW,CAAE,CACnD,CACA;AACA,MAAO,CAAAa,MAAM,CACf,CAAC,CACAL,KAAK,EAAK,CACT,MAAO,CAAAa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,GAAI,CAAAe,YAAY,CAAG,KAAK,CAExB;AACA/B,GAAG,CAACkB,YAAY,CAACd,QAAQ,CAACgB,GAAG,CAC1BhB,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACD,KAAO,CAAAY,KAAK,EAAK,CACf,KAAM,CAAAgB,eAAe,CAAGhB,KAAK,CAACK,MAAM,CACpCV,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAACoB,eAAe,CAAC,CAC9C;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAAAH,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAhB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}