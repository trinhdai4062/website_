{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Home/slider/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"./index.css\";\nimport Slide1 from \"../../../../assets/images/slider-1.png\";\nimport Slide2 from \"../../../../assets/images/slider-2.png\";\nimport Button from \"@mui/material/Button\";\nimport Newsletter from \"../../../common/newsletter\";\nimport { UserContext } from \"../../../../pages/UserPage\";\nimport api from \"../../../../api/api\";\nimport { baseURL_, baseIMG_ } from \"../../../../utils/env\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeSlider = () => {\n  _s();\n  const [dataIMG, setDataIMG] = useState([]);\n  const context = useContext(UserContext);\n  useEffect(() => {\n    listIMG();\n  }, []);\n  const listIMG = async () => {\n    let arr = [];\n    const list = await api.get(`${baseURL_}/imgshose`);\n    const findImage = list.data.data.map(img => img.images).flat();\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * findImage.length);\n      arr.push(findImage[randomIndex]);\n    }\n    console.log(\"arr\", arr);\n    setDataIMG(arr);\n  };\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    // fade: true,\n    arrows: false,\n    autoplay: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"homeSlider\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-merge-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://via.placeholder.com/500x100\",\n        alt: \"Image 1\",\n        className: \"top-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://via.placeholder.com/500x100\",\n        alt: \"Image 2\",\n        className: \"bottom-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeSlider, \"Ws2hkdq6HFLedYq6K09Xj0NOeaY=\");\n_c = HomeSlider;\nexport default HomeSlider;\nvar _c;\n$RefreshReg$(_c, \"HomeSlider\");","map":{"version":3,"names":["React","useEffect","useContext","useState","Slider","Slide1","Slide2","Button","Newsletter","UserContext","api","baseURL_","baseIMG_","jsxDEV","_jsxDEV","HomeSlider","_s","dataIMG","setDataIMG","context","listIMG","arr","list","get","findImage","data","map","img","images","flat","i","randomIndex","Math","floor","random","length","push","console","log","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Home/slider/index.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./index.css\";\r\n\r\nimport Slide1 from \"../../../../assets/images/slider-1.png\";\r\nimport Slide2 from \"../../../../assets/images/slider-2.png\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Newsletter from \"../../../common/newsletter\";\r\n\r\nimport { UserContext } from \"../../../../pages/UserPage\";\r\nimport api from \"../../../../api/api\";\r\nimport { baseURL_, baseIMG_ } from \"../../../../utils/env\";\r\n\r\nconst HomeSlider = () => {\r\n  const [dataIMG, setDataIMG] = useState([]);\r\n  const context = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    listIMG();\r\n  }, []);\r\n\r\n  const listIMG = async () => {\r\n    let arr = [];\r\n    const list = await api.get(`${baseURL_}/imgshose`);\r\n    const findImage = list.data.data.map((img) => img.images).flat();\r\n    for (let i = 0; i < 3; i++) {\r\n      const randomIndex = Math.floor(Math.random() * findImage.length);\r\n      arr.push(findImage[randomIndex]);\r\n    }\r\n    console.log(\"arr\", arr);\r\n    setDataIMG(arr);\r\n  };\r\n\r\n  var settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    // fade: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n  };\r\n\r\n  return (\r\n    <section className=\"homeSlider\">\r\n      {/* <div className=\"container-fluid position-relative\">\r\n        <Slider {...settings} className=\"home_slider_Main\">\r\n          {dataIMG.map((img, index) => (\r\n            <div key={index} className=\"item\">\r\n              <img\r\n                //   src={baseIMG_+img}\r\n                src={`${baseURL_}/resize?url=` + img + \"&width=1400&height=500\"}\r\n                style={{ objectFit: \"cover\" }}\r\n                className=\"w-100 slide-up\"\r\n              />\r\n              <div className=\"info\">\r\n                <h2 className=\"mb-4\">\r\n                  Donâ€™t miss amazing\r\n                  <br />\r\n                  grocery deals\r\n                </h2>\r\n                <p>Sign up for the daily newsletter</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n\r\n        {context.windowWidth > 992 && <Newsletter />}\r\n      </div> */}\r\n     <div className=\"image-merge-container\">\r\n      <img\r\n        src=\"https://via.placeholder.com/500x100\"\r\n        alt=\"Image 1\"\r\n        className=\"top-image\"\r\n      />\r\n      <img\r\n        src=\"https://via.placeholder.com/500x100\"\r\n        alt=\"Image 2\"\r\n        className=\"bottom-image\"\r\n      />\r\n    </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeSlider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,aAAa;AAEpB,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,OAAOC,UAAU,MAAM,4BAA4B;AAEnD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMgB,OAAO,GAAGjB,UAAU,CAACO,WAAW,CAAC;EAEvCR,SAAS,CAAC,MAAM;IACdmB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIC,GAAG,GAAG,EAAE;IACZ,MAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAE,GAAEZ,QAAS,WAAU,CAAC;IAClD,MAAMa,SAAS,GAAGF,IAAI,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC;IAChE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGV,SAAS,CAACW,MAAM,CAAC;MAChEd,GAAG,CAACe,IAAI,CAACZ,SAAS,CAACO,WAAW,CAAC,CAAC;IAClC;IACAM,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEjB,GAAG,CAAC;IACvBH,UAAU,CAACG,GAAG,CAAC;EACjB,CAAC;EAED,IAAIkB,QAAQ,GAAG;IACbC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjB;IACAC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;EACZ,CAAC;EAED,oBACEhC,OAAA;IAASiC,SAAS,EAAC,YAAY;IAAAC,QAAA,eAyB9BlC,OAAA;MAAKiC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACrClC,OAAA;QACEmC,GAAG,EAAC,qCAAqC;QACzCC,GAAG,EAAC,SAAS;QACbH,SAAS,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFxC,OAAA;QACEmC,GAAG,EAAC,qCAAqC;QACzCC,GAAG,EAAC,SAAS;QACbH,SAAS,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAACtC,EAAA,CAvEID,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAyEhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}