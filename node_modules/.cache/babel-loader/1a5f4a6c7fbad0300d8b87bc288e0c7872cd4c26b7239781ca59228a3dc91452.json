{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport socket from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const [receiverEmail, setReceiverEmail] = useState('');\n  useEffect(() => {\n    socket.emit('register', userEmail);\n    socket.on('receiveMessage', data => {\n      setChat(prevChat => [...prevChat, data]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userEmail]);\n  const sendMessage = async () => {\n    try {\n      await axios.post('http://192.168.10.110:6969/v1/message/send', {\n        senderEmail: userEmail,\n        receiverEmail: receiverEmail,\n        message: message\n      });\n      setChat(prevChat => [...prevChat, {\n        senderEmail: userEmail,\n        message: message\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userEmail,\n      onChange: e => setUserEmail(e.target.value),\n      placeholder: \"Your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: receiverEmail,\n      onChange: e => setReceiverEmail(e.target.value),\n      placeholder: \"Receiver's email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.senderEmail, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"yGnM6oq9flcL0WpkYtp9UMJ+Kos=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","socket","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","chat","setChat","userEmail","setUserEmail","receiverEmail","setReceiverEmail","emit","on","data","prevChat","off","sendMessage","post","senderEmail","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js"],"sourcesContent":["// src/components/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport socket from '../services/socket';\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const [receiverEmail, setReceiverEmail] = useState('');\n\n  useEffect(() => {\n    socket.emit('register', userEmail);\n\n    socket.on('receiveMessage', (data) => {\n      setChat(prevChat => [...prevChat, data]);\n    });\n\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userEmail]);\n\n  const sendMessage = async () => {\n    try {\n      await axios.post('http://192.168.10.110:6969/v1/message/send', {\n        senderEmail: userEmail,\n        receiverEmail: receiverEmail,\n        message: message,\n      });\n\n      setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={userEmail}\n        onChange={(e) => setUserEmail(e.target.value)}\n        placeholder=\"Your email\"\n      />\n      <input\n        type=\"text\"\n        value={receiverEmail}\n        onChange={(e) => setReceiverEmail(e.target.value)}\n        placeholder=\"Receiver's email\"\n      />\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button onClick={sendMessage}>Send</button>\n      <div>\n        {chat.map((msg, index) => (\n          <div key={index}>\n            <b>{msg.senderEmail}:</b> {msg.message}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}