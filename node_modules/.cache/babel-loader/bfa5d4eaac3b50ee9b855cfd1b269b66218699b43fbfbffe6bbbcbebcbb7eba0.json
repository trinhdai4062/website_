{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../../../services/socket\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  //   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState(\"\");\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  useEffect(() => {\n    const newSocket = io(\"http://192.168.10.110:6969\"); // Thay đổi địa chỉ và port tương ứng với server của bạn\n    setSocket(newSocket);\n    newSocket.emit(\"register\", senderEmail);\n\n    //   socket.on('receiveMessage', (data) => {\n    //     console.log('Received message:', data);\n    //     displayMessage(data.senderEmail, data.message);\n    // });\n\n    newSocket.on(\"receiveMessage\", ({\n      senderEmail,\n      message,\n      messageId,\n      time\n    }) => {\n      setReceivedMessages(prevMessages => [...prevMessages, {\n        senderEmail,\n        message,\n        messageId,\n        received: false,\n        time\n      }]);\n    });\n    newSocket.on(\"messageHasBeenRead\", ({\n      messageId\n    }) => {\n      setReceivedMessages(prevMessages => prevMessages.map(msg => msg.messageId === messageId ? {\n        ...msg,\n        received: true\n      } : msg));\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [senderEmail]);\n  const handleSendMessage = async () => {\n    const time = Date.now();\n    try {\n      const response = await axios.post(\"http://192.168.10.110:6969/v1/message/send\", {\n        senderEmail,\n        receiverEmail,\n        message\n      });\n      console.log(\"Sent message\", response);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    if (socket) {\n      socket.emit(\"sendMessage\", {\n        senderEmail,\n        receiverEmail,\n        message,\n        time: time\n      });\n      setReceivedMessages(prevChat => [...prevChat, {\n        senderEmail,\n        message,\n        time: time,\n        received: false\n      }]);\n      setMessage(\"\");\n    }\n  };\n  const sendMessageReadConfirmation = messageId => {\n    socket.emit(\"messageRead\", {\n      messageId\n    });\n  };\n  const handleReadConfirmation = messageId => {\n    // Xử lý sự kiện khi người dùng xác nhận tin nhắn đã đọc\n    sendMessageReadConfirmation(messageId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your ID\",\n        value: senderEmail,\n        onChange: e => setSenderEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receiver ID\",\n        value: receiverEmail,\n        onChange: e => setReceiverEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.senderEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), \": \", msg.message, \" \", msg.received ? \"(Read)\" : \"(Unread)\", !msg.received && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReadConfirmation(msg.messageId),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"tLyk/HzoYF3H3zmR8OgfMPL6hvw=\");\n_c = Chat;\nexport default Chat;\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","io","axios","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","senderEmail","setSenderEmail","receiverEmail","setReceiverEmail","setSocket","receivedMessages","setReceivedMessages","newSocket","emit","on","messageId","time","prevMessages","received","map","msg","disconnect","handleSendMessage","Date","now","response","post","console","log","error","prevChat","sendMessageReadConfirmation","handleReadConfirmation","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js"],"sourcesContent":["// src/components/Chat.js\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../../../services/socket\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst Chat = () => {\n  const [message, setMessage] = useState(\"\");\n  //   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState(\"\");\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  const [receivedMessages, setReceivedMessages] = useState([]);\n\n  useEffect(() => {\n    const newSocket = io(\"http://192.168.10.110:6969\"); // Thay đổi địa chỉ và port tương ứng với server của bạn\n    setSocket(newSocket);\n    newSocket.emit(\"register\", senderEmail);\n\n    //   socket.on('receiveMessage', (data) => {\n    //     console.log('Received message:', data);\n    //     displayMessage(data.senderEmail, data.message);\n    // });\n\n    newSocket.on(\"receiveMessage\", ({ senderEmail, message, messageId,time }) => {\n      setReceivedMessages((prevMessages) => [\n        ...prevMessages,\n        { senderEmail, message, messageId, received: false,time},\n      ]);\n    });\n    newSocket.on(\"messageHasBeenRead\", ({ messageId }) => {\n      setReceivedMessages((prevMessages) =>\n        prevMessages.map((msg) =>\n          msg.messageId === messageId ? { ...msg, received: true } : msg\n        )\n      );\n    });\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [senderEmail]);\n\n\n\n\n\n  const handleSendMessage = async () => {\n    const time = Date.now();\n    try {\n      const response = await axios.post(\n        \"http://192.168.10.110:6969/v1/message/send\",\n        { senderEmail, receiverEmail, message }\n      );\n      console.log(\"Sent message\", response);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    if (socket) {\n      socket.emit(\"sendMessage\", { senderEmail, receiverEmail, message,time: time });\n\n      setReceivedMessages((prevChat) => [\n        ...prevChat,\n        { senderEmail, message, time: time, received: false },\n      ]);\n\n      setMessage(\"\");\n    }\n  };\n  const sendMessageReadConfirmation = (messageId) => {\n    socket.emit(\"messageRead\", { messageId });\n  };\n  const handleReadConfirmation = (messageId) => {\n    // Xử lý sự kiện khi người dùng xác nhận tin nhắn đã đọc\n    sendMessageReadConfirmation(messageId);\n  };\n\n\n  return (\n    <div>\n      <h1>Chat</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Your ID\"\n          value={senderEmail}\n          onChange={(e) => setSenderEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Receiver ID\"\n          value={receiverEmail}\n          onChange={(e) => setReceiverEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n      <div>\n        {receivedMessages.map((msg, index) => (\n          <div key={index}>\n            <strong>{msg.senderEmail}</strong>: {msg.message}{\" \"}\n            {msg.received ? \"(Read)\" : \"(Unread)\"}\n            {!msg.received && (\n              <button onClick={() => handleReadConfirmation(msg.messageId)}>\n                Mark as Read\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}