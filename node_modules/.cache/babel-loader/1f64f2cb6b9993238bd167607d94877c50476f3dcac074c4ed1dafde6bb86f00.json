{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\n// Tạo một instance của axios\nconst api = axios.create({\n  baseURL: 'http://192.168.10.110:6969/v1'\n});\nexport const checkTokenExpiration = token => {\n  if (!token) return true;\n  const {\n    exp\n  } = jwtDecode(token);\n  if (!exp) return true;\n  return Date.now() >= exp * 1000;\n};\nexport const refreshAccessToken = async () => {\n  try {\n    const response = await axios.post(`${api.defaults.baseURL}/auth/refresh`);\n    const {\n      accessToken\n    } = response.data.newAccessToken;\n    if (response.status === true) {\n      localStorage.setItem('accessToken', response.data.newAccessToken);\n    }\n    console.log('refreshToken', response);\n    return accessToken;\n  } catch (error) {\n    console.error(\"Unable to refresh token\", error.response.data.message);\n    return null;\n  }\n};\n\n// Thêm một interceptor vào request để thêm access token vào header\napi.interceptors.request.use(async config => {\n  const accessToken = localStorage.getItem('accessToken');\n  if (checkTokenExpiration(accessToken)) {\n    accessToken = await refreshAccessToken();\n  }\n  if (accessToken) {\n    config.headers['token'] = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Thêm một interceptor vào response để xử lý làm mới token\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const newAccessToken = await refreshAccessToken();\n    if (newAccessToken) {\n      // axios.defaults.headers.common['token'] = `Bearer ${newAccessToken}`;\n      originalRequest.headers['token'] = `Bearer ${newAccessToken}`;\n      return api(originalRequest);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","jwtDecode","api","create","baseURL","checkTokenExpiration","token","exp","Date","now","refreshAccessToken","response","post","defaults","accessToken","data","newAccessToken","status","localStorage","setItem","console","log","error","message","interceptors","request","use","config","getItem","headers","Promise","reject","originalRequest","_retry"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/api/api.js"],"sourcesContent":["import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\n// Tạo một instance của axios\nconst api = axios.create({\n  baseURL: 'http://192.168.10.110:6969/v1'\n});\nexport const checkTokenExpiration = (token) => {\n    if (!token) return true;\n    const { exp } = jwtDecode(token);\n    if (!exp) return true;\n    return (Date.now() >= exp * 1000);\n  };\n\n  export const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${api.defaults.baseURL}/auth/refresh`);\n      const { accessToken } = response.data.newAccessToken;\n      if(response.status===true){\n        localStorage.setItem('accessToken', response.data.newAccessToken);\n      }\n      console.log('refreshToken',response)\n      return accessToken;\n    } catch (error) {\n      console.error(\"Unable to refresh token\", error.response.data.message);\n      return null;\n    }\n  };\n\n// Thêm một interceptor vào request để thêm access token vào header\napi.interceptors.request.use(\n  async (config) => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (checkTokenExpiration(accessToken)) {\n        accessToken = await refreshAccessToken();\n      }\n    if (accessToken) {\n      config.headers['token'] = `Bearer ${accessToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Thêm một interceptor vào response để xử lý làm mới token\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const newAccessToken = await refreshAccessToken();\n      if (newAccessToken) {\n        // axios.defaults.headers.common['token'] = `Bearer ${newAccessToken}`;\n        originalRequest.headers['token'] = `Bearer ${newAccessToken}`;\n        return api(originalRequest);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AACF,OAAO,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAC3C,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EACvB,MAAM;IAAEC;EAAI,CAAC,GAAGN,SAAS,CAACK,KAAK,CAAC;EAChC,IAAI,CAACC,GAAG,EAAE,OAAO,IAAI;EACrB,OAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,GAAG,GAAG,IAAI;AAClC,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAEV,GAAG,CAACW,QAAQ,CAACT,OAAQ,eAAc,CAAC;IACzE,MAAM;MAAEU;IAAY,CAAC,GAAGH,QAAQ,CAACI,IAAI,CAACC,cAAc;IACpD,IAAGL,QAAQ,CAACM,MAAM,KAAG,IAAI,EAAC;MACxBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAER,QAAQ,CAACI,IAAI,CAACC,cAAc,CAAC;IACnE;IACAI,OAAO,CAACC,GAAG,CAAC,cAAc,EAACV,QAAQ,CAAC;IACpC,OAAOG,WAAW;EACpB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACX,QAAQ,CAACI,IAAI,CAACQ,OAAO,CAAC;IACrE,OAAO,IAAI;EACb;AACF,CAAC;;AAEH;AACArB,GAAG,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,MAAOC,MAAM,IAAK;EAChB,MAAMb,WAAW,GAAGI,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;EACvD,IAAIvB,oBAAoB,CAACS,WAAW,CAAC,EAAE;IACnCA,WAAW,GAAG,MAAMJ,kBAAkB,CAAC,CAAC;EAC1C;EACF,IAAII,WAAW,EAAE;IACfa,MAAM,CAACE,OAAO,CAAC,OAAO,CAAC,GAAI,UAASf,WAAY,EAAC;EACnD;EACA,OAAOa,MAAM;AACf,CAAC,EACAL,KAAK,IAAK;EACT,OAAOQ,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACApB,GAAG,CAACsB,YAAY,CAACb,QAAQ,CAACe,GAAG,CAC1Bf,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOW,KAAK,IAAK;EACf,MAAMU,eAAe,GAAGV,KAAK,CAACK,MAAM;EACpC,IAAIL,KAAK,CAACX,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAI,CAACe,eAAe,CAACC,MAAM,EAAE;IAC5DD,eAAe,CAACC,MAAM,GAAG,IAAI;IAC7B,MAAMjB,cAAc,GAAG,MAAMN,kBAAkB,CAAC,CAAC;IACjD,IAAIM,cAAc,EAAE;MAClB;MACAgB,eAAe,CAACH,OAAO,CAAC,OAAO,CAAC,GAAI,UAASb,cAAe,EAAC;MAC7D,OAAOd,GAAG,CAAC8B,eAAe,CAAC;IAC7B;EACF;EACA,OAAOF,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}