{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport socket from '../../../services/socket';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  //   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState('');\n  const [receiverEmail, setReceiverEmail] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  useEffect(() => {\n    const newSocket = io('http://192.168.10.110:6969'); // Thay đổi địa chỉ và port tương ứng với server của bạn\n    setSocket(newSocket);\n    newSocket.emit('register', senderEmail);\n    newSocket.on('receiveMessage', data => {\n      setReceivedMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [senderEmail]);\n  const handleSendMessage = () => {\n    if (socket) {\n      socket.emit('sendMessage', {\n        senderEmail,\n        receiverEmail,\n        message\n      });\n      setReceivedMessages(prevChat => [...prevChat, {\n        senderEmail,\n        message\n      }]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your ID\",\n        value: userID,\n        onChange: e => setSenderEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receiver ID\",\n        value: receiverID,\n        onChange: e => setReceiverEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.senderID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pmpJKtjn7dZWgPBpQkeBFyD14Po=\");\n_c = Chat;\nexport default Chat;\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","io","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","senderEmail","setSenderEmail","receiverEmail","setReceiverEmail","setSocket","receivedMessages","setReceivedMessages","newSocket","emit","on","data","prevMessages","disconnect","handleSendMessage","prevChat","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","userID","onChange","e","target","receiverID","onClick","map","msg","index","senderID","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js"],"sourcesContent":["// src/components/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport socket from '../../../services/socket';\nimport { io } from 'socket.io-client';\n\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState('');\n  const [receiverEmail, setReceiverEmail] = useState('');\n  const [socket, setSocket] = useState(null);\n\n  const [receivedMessages, setReceivedMessages] = useState([]);\n\n\n  useEffect(() => {\n    const newSocket = io('http://192.168.10.110:6969'); // Thay đổi địa chỉ và port tương ứng với server của bạn\n    setSocket(newSocket);\n    newSocket.emit('register', senderEmail);\n\n    newSocket.on('receiveMessage', (data) => {\n        setReceivedMessages((prevMessages) => [...prevMessages, data]);\n      });\n    return () => {\n        newSocket.disconnect();\n      };\n  }, [senderEmail]);\n\n  const handleSendMessage = () => {\n    if (socket) {\n    socket.emit('sendMessage', { senderEmail, receiverEmail, message });\n    setReceivedMessages((prevChat) => [...prevChat, { senderEmail, message }]);\n    setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Your ID\"\n          value={userID}\n          onChange={e => setSenderEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Receiver ID\"\n          value={receiverID}\n          onChange={e => setReceiverEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n      <div>\n        {receivedMessages.map((msg, index) => (\n          <div key={index}>\n            <strong>{msg.senderID}</strong>: {msg.message}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}