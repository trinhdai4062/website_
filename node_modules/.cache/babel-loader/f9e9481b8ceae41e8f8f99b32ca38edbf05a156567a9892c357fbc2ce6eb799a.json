{"ast":null,"code":"function extend(destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination;\n}\nfunction repeat(character, count) {\n  return Array(count + 1).join(character);\n}\nfunction trimLeadingNewlines(string) {\n  return string.replace(/^\\n*/, '');\n}\nfunction trimTrailingNewlines(string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd);\n}\nvar blockElements = ['ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS', 'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER', 'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES', 'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD', 'TFOOT', 'TH', 'THEAD', 'TR', 'UL'];\nfunction isBlock(node) {\n  return is(node, blockElements);\n}\nvar voidElements = ['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nfunction isVoid(node) {\n  return is(node, voidElements);\n}\nfunction hasVoid(node) {\n  return has(node, voidElements);\n}\nvar meaningfulWhenBlankElements = ['A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'];\nfunction isMeaningfulWhenBlank(node) {\n  return is(node, meaningfulWhenBlankElements);\n}\nfunction hasMeaningfulWhenBlank(node) {\n  return has(node, meaningfulWhenBlankElements);\n}\nfunction is(node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0;\n}\nfunction has(node, tagNames) {\n  return node.getElementsByTagName && tagNames.some(function (tagName) {\n    return node.getElementsByTagName(tagName).length;\n  });\n}\nvar rules = {};\nrules.paragraph = {\n  filter: 'p',\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n';\n  }\n};\nrules.lineBreak = {\n  filter: 'br',\n  replacement: function (content, node, options) {\n    return options.br + '\\n';\n  }\n};\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat(hLevel === 1 ? '=' : '-', content.length);\n      return '\\n\\n' + content + '\\n' + underline + '\\n\\n';\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n';\n    }\n  }\n};\nrules.blockquote = {\n  filter: 'blockquote',\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n';\n  }\n};\nrules.list = {\n  filter: ['ul', 'ol'],\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content;\n    } else {\n      return '\\n\\n' + content + '\\n\\n';\n    }\n  }\n};\nrules.listItem = {\n  filter: 'li',\n  replacement: function (content, node, options) {\n    content = content.replace(/^\\n+/, '') // remove leading newlines\n    .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n    .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '');\n  }\n};\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return options.codeBlockStyle === 'indented' && node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n  },\n  replacement: function (content, node, options) {\n    return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n';\n  }\n};\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return options.codeBlockStyle === 'fenced' && node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n  },\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n    var match;\n    while (match = fenceInCodeRegex.exec(code)) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n    var fence = repeat(fenceChar, fenceSize);\n    return '\\n\\n' + fence + language + '\\n' + code.replace(/\\n$/, '') + '\\n' + fence + '\\n\\n';\n  }\n};\nrules.horizontalRule = {\n  filter: 'hr',\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n';\n  }\n};\nrules.inlineLink = {\n  filter: function (node, options) {\n    return options.linkStyle === 'inlined' && node.nodeName === 'A' && node.getAttribute('href');\n  },\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')';\n  }\n};\nrules.referenceLink = {\n  filter: function (node, options) {\n    return options.linkStyle === 'referenced' && node.nodeName === 'A' && node.getAttribute('href');\n  },\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break;\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break;\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n    this.references.push(reference);\n    return replacement;\n  },\n  references: [],\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references;\n  }\n};\nrules.emphasis = {\n  filter: ['em', 'i'],\n  replacement: function (content, node, options) {\n    if (!content.trim()) return '';\n    return options.emDelimiter + content + options.emDelimiter;\n  }\n};\nrules.strong = {\n  filter: ['strong', 'b'],\n  replacement: function (content, node, options) {\n    if (!content.trim()) return '';\n    return options.strongDelimiter + content + options.strongDelimiter;\n  }\n};\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n    return node.nodeName === 'CODE' && !isCodeBlock;\n  },\n  replacement: function (content) {\n    if (!content) return '';\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n    return delimiter + extraSpace + content + extraSpace + delimiter;\n  }\n};\nrules.image = {\n  filter: 'img',\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n  }\n};\nfunction cleanAttribute(attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : '';\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules(options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n  this.keepReplacement = options.keepReplacement;\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return '';\n      }\n    });\n  },\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule;\n    var rule;\n    if (rule = findRule(this.array, node, this.options)) return rule;\n    if (rule = findRule(this._keep, node, this.options)) return rule;\n    if (rule = findRule(this._remove, node, this.options)) return rule;\n    return this.defaultRule;\n  },\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\nfunction findRule(rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule;\n  }\n  return void 0;\n}\nfunction filterValue(rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true;\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true;\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true;\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function');\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace(options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE';\n  };\n  if (!element.firstChild || isPre(element)) return;\n  var prevText = null;\n  var keepLeadingWs = false;\n  var prev = null;\n  var node = next(prev, element, isPre);\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) {\n      // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n      if ((!prevText || / $/.test(prevText.data)) && !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue;\n      }\n      node.data = text;\n      prevText = node;\n    } else if (node.nodeType === 1) {\n      // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue;\n    }\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove(node) {\n  var next = node.nextSibling || node.parentNode;\n  node.parentNode.removeChild(node);\n  return next;\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next(prev, current, isPre) {\n  if (prev && prev.parentNode === current || isPre(current)) {\n    return current.nextSibling || current.parentNode;\n  }\n  return current.firstChild || current.nextSibling || current.parentNode;\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = typeof window !== 'undefined' ? window : {};\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively() {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n  return canParse;\n}\nfunction createHTMLParser() {\n  var Parser = function () {};\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n      };\n    }\n  }\n  return Parser;\n}\nfunction shouldUseActiveX() {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX;\n}\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\nfunction RootNode(input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n    // DOM parsers arrange elements in the <head> and <body>.\n    // Wrapping in a custom element ensures elements are reliably arranged in\n    // a single element.\n    '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>', 'text/html');\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n  return root;\n}\nvar _htmlParser;\nfunction htmlParser() {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser;\n}\nfunction isPreOrCode(node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE';\n}\nfunction Node(node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node;\n}\nfunction isBlank(node) {\n  return !isVoid(node) && !isMeaningfulWhenBlank(node) && /^\\s*$/i.test(node.textContent) && !hasVoid(node) && !hasMeaningfulWhenBlank(node);\n}\nfunction flankingWhitespace(node, options) {\n  if (node.isBlock || options.preformattedCode && node.isCode) {\n    return {\n      leading: '',\n      trailing: ''\n    };\n  }\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n  return {\n    leading: edges.leading,\n    trailing: edges.trailing\n  };\n}\nfunction edgeWhitespace(string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1],\n    // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4],\n    // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  };\n}\nfunction isFlankedByWhitespace(side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked;\n}\nvar reduce = Array.prototype.reduce;\nvar escapes = [[/\\\\/g, '\\\\\\\\'], [/\\*/g, '\\\\*'], [/^-/g, '\\\\-'], [/^\\+ /g, '\\\\+ '], [/^(=+)/g, '\\\\$1'], [/^(#{1,6}) /g, '\\\\$1 '], [/`/g, '\\\\`'], [/^~~~/g, '\\\\~~~'], [/\\[/g, '\\\\['], [/\\]/g, '\\\\]'], [/^>/g, '\\\\>'], [/_/g, '\\\\_'], [/^(\\d+)\\. /g, '$1\\\\. ']];\nfunction TurndownService(options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options);\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : '';\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML;\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content;\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(input + ' is not a string, or an element/document/fragment node.');\n    }\n    if (input === '') return '';\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output);\n  },\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions');\n    }\n    return this;\n  },\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this;\n  },\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this;\n  },\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this;\n  },\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1]);\n    }, string);\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process(parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n    return join(output, replacement);\n  }, '');\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess(output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '');\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode(node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return whitespace.leading + rule.replacement(content, node, this.options) + whitespace.trailing;\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join(output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n  return s1 + separator + s2;\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert(input) {\n  return input != null && (typeof input === 'string' || input.nodeType && (input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11));\n}\nexport default TurndownService;","map":{"version":3,"names":["extend","destination","i","arguments","length","source","key","hasOwnProperty","repeat","character","count","Array","join","trimLeadingNewlines","string","replace","trimTrailingNewlines","indexEnd","substring","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","paragraph","filter","replacement","content","lineBreak","options","br","heading","hLevel","Number","charAt","headingStyle","underline","blockquote","list","parent","parentNode","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","index","prototype","call","children","nextSibling","test","indentedCodeBlock","codeBlockStyle","firstChild","textContent","fencedCodeBlock","className","language","match","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","title","cleanAttribute","referenceLink","reference","linkReferenceStyle","id","references","push","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","src","titlePart","attribute","Rules","_keep","_remove","blankRule","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","add","rule","unshift","keep","remove","forNode","isBlank","findRule","forEach","fn","filterValue","toLowerCase","isArray","TypeError","collapseWhitespace","element","isPre","prevText","keepLeadingWs","prev","next","nodeType","text","data","substr","nextNode","removeChild","current","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","e","createHTMLParser","shouldUseActiveX","doc","ActiveXObject","designMode","open","write","close","document","implementation","createHTMLDocument","useActiveX","HTMLParser","RootNode","input","htmlParser","getElementById","cloneNode","preformattedCode","isPreOrCode","_htmlParser","Node","isCode","flankingWhitespace","leading","trailing","edges","edgeWhitespace","leadingAscii","isFlankedByWhitespace","leadingNonAscii","trailingAscii","trailingNonAscii","m","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","turndown","canConvert","output","process","postProcess","use","plugin","addRule","escape","accumulator","self","childNodes","replacementForNode","whitespace","s1","s2","nls","Math","max","separator"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/node_modules/turndown/lib/turndown.browser.es.js"],"sourcesContent":["function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}