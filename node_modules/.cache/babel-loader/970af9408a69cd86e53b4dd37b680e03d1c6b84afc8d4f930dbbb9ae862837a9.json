{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://192.168.10.110:6969');\nconst Chat = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const userID = params.get('userID');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [receiverID, setReceiverID] = useState('');\n  useEffect(() => {\n    if (userID) {\n      socket.emit('register', userID);\n    }\n    socket.on('receiveMessage', ({\n      senderID,\n      message\n    }) => {\n      setMessages(prevMessages => [{\n        senderID,\n        message\n      }, ...prevMessages]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userID]);\n  const sendMessage = () => {\n    socket.emit('sendMessage', {\n      senderID: userID,\n      receiverID,\n      message\n    });\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter receiver's user ID\",\n      value: receiverID,\n      onChange: e => setReceiverID(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [msg.senderID, \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"y5v5UfWsfFfVssyHkL5wae14Z/I=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","io","jsxDEV","_jsxDEV","socket","Chat","_s","location","params","URLSearchParams","search","userID","get","message","setMessage","messages","setMessages","receiverID","setReceiverID","emit","on","senderID","prevMessages","off","sendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nconst socket = io('http://192.168.10.110:6969'); \n\nconst Chat = () => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const userID = params.get('userID');\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [receiverID, setReceiverID] = useState('');\n\n  useEffect(() => {\n    if (userID) {\n      socket.emit('register', userID);\n    }\n\n    socket.on('receiveMessage', ({ senderID, message }) => {\n      setMessages((prevMessages) => [{ senderID, message }, ...prevMessages]);\n    });\n\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userID]);\n\n  const sendMessage = () => {\n    socket.emit('sendMessage', { senderID: userID, receiverID, message });\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <h1>Chat</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter receiver's user ID\"\n        value={receiverID}\n        onChange={(e) => setReceiverID(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter your message\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>\n            {msg.senderID}: {msg.message}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Chat;\n\n// // src/components/Chat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import socket from '../../../services/socket';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [chat, setChat] = useState([]);\n//   const [userEmail, setUserEmail] = useState('');\n//   const [receiverEmail, setReceiverEmail] = useState('');\n\n//   useEffect(() => {\n//     socket.emit('register', userEmail);\n\n//     socket.on('receiveMessage', (data) => {\n//       setChat(prevChat => [...prevChat, data]);\n//     });\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [userEmail]);\n\n//   const sendMessage = async () => {\n//     try {\n//       await axios.post('http://192.168.10.110:6969/v1/message/send', {\n//         senderEmail: userEmail,\n//         receiverEmail: receiverEmail,\n//         message: message,\n//       });\n\n//       setChat(prevChat => [...prevChat, { senderEmail: userEmail, message: message }]);\n//       setMessage('');\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={userEmail}\n//         onChange={(e) => setUserEmail(e.target.value)}\n//         placeholder=\"Your email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={receiverEmail}\n//         onChange={(e) => setReceiverEmail(e.target.value)}\n//         placeholder=\"Receiver's email\"\n//       />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message\"\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>\n//         {chat.map((msg, index) => (\n//           <div key={index}>\n//             <b>{msg.senderEmail}:</b> {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}