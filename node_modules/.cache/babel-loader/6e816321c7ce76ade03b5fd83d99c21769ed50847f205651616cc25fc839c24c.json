{"ast":null,"code":"var _jsxFileName = \"/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../../../services/socket\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { base_, baseURL_ } from \"../../../utils/env\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  //   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState(\"\");\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  useEffect(() => {\n    // const newSocket = io(`${base_}`);\n    const newSocket = io(`http://localhost`);\n    setSocket(newSocket);\n    newSocket.emit(\"register\", senderEmail);\n\n    //   socket.on('receiveMessage', (data) => {\n    //     console.log('Received message:', data);\n    //     displayMessage(data.senderEmail, data.message);\n    // });\n\n    newSocket.on(\"receiveMessage\", ({\n      senderEmail,\n      message,\n      messageId,\n      time\n    }) => {\n      setReceivedMessages(prevMessages => [...prevMessages, {\n        senderEmail,\n        message,\n        messageId,\n        received: false,\n        time\n      }]);\n    });\n    newSocket.on(\"messageHasBeenRead\", ({\n      messageId\n    }) => {\n      setReceivedMessages(prevMessages => prevMessages.map(msg => msg.messageId === messageId ? {\n        ...msg,\n        received: true\n      } : msg));\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [senderEmail]);\n  const handleSendMessage = async () => {\n    const time = Date.now();\n    try {\n      const response = await axios.post(`${baseURL_}/message/send`, {\n        senderEmail,\n        receiverEmail,\n        message\n      });\n      console.log(\"Sent message\", response.data.message);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    if (socket) {\n      socket.emit(\"sendMessage\", {\n        senderEmail,\n        receiverEmail,\n        message,\n        time: time\n      });\n      setReceivedMessages(prevChat => [...prevChat, {\n        senderEmail,\n        message,\n        time: time,\n        received: false\n      }]);\n      setMessage(\"\");\n    }\n  };\n  const sendMessageReadConfirmation = messageId => {\n    socket.emit(\"messageRead\", {\n      messageId\n    });\n  };\n  const handleReadConfirmation = messageId => {\n    // Xử lý sự kiện khi người dùng xác nhận tin nhắn đã đọc\n    sendMessageReadConfirmation(messageId);\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h1>Chat</h1>\n    //   <div>\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Your ID\"\n    //       value={senderEmail}\n    //       onChange={(e) => setSenderEmail(e.target.value)}\n    //     />\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Receiver ID\"\n    //       value={receiverEmail}\n    //       onChange={(e) => setReceiverEmail(e.target.value)}\n    //     />\n    //   </div>\n    //   <div>\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Message\"\n    //       value={message}\n    //       onChange={(e) => setMessage(e.target.value)}\n    //     />\n    //     <button onClick={handleSendMessage}>Send</button>\n    //   </div>\n    //   <div>\n    //     {receivedMessages.map((msg, index) => (\n    //       <div key={index}>\n    //         <strong>{msg.senderEmail}</strong>: {msg.message}{\" \"}\n    //         {msg.received ? \"(Read)\" : \"(Unread)\"}\n    //         {!msg.received && (\n    //           <button onClick={() => handleReadConfirmation(msg.messageId)}>\n    //             Mark as Read\n    //           </button>\n    //         )}\n    //       </div>\n    //     ))}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.senderEmail === senderEmail ? \"sent-message\" : \"received-message\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.senderEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), \": \", msg.message, msg.received ? \" (Read)\" : \" (Unread)\", !msg.received && msg.senderEmail !== senderEmail && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReadConfirmation(msg.messageId),\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your ID\",\n          value: senderEmail,\n          onChange: e => setSenderEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Receiver ID\",\n          value: receiverEmail,\n          onChange: e => setReceiverEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Chat, \"tLyk/HzoYF3H3zmR8OgfMPL6hvw=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","io","axios","base_","baseURL_","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","senderEmail","setSenderEmail","receiverEmail","setReceiverEmail","setSocket","receivedMessages","setReceivedMessages","newSocket","emit","on","messageId","time","prevMessages","received","map","msg","disconnect","handleSendMessage","Date","now","response","post","console","log","data","error","prevChat","sendMessageReadConfirmation","handleReadConfirmation","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/trinhdai/DATA/React_Native/BigShose2/client/website/src/components/user/Chat/chat.js"],"sourcesContent":["// src/components/Chat.js\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../../../services/socket\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { base_,baseURL_ } from \"../../../utils/env\";\n\nconst Chat = () => {\n  const [message, setMessage] = useState(\"\");\n  //   const [chat, setChat] = useState([]);\n  const [senderEmail, setSenderEmail] = useState(\"\");\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  const [receivedMessages, setReceivedMessages] = useState([]);\n\n  useEffect(() => {\n    // const newSocket = io(`${base_}`);\n    const newSocket = io(`http://localhost`);\n    setSocket(newSocket);\n    newSocket.emit(\"register\", senderEmail);\n\n    //   socket.on('receiveMessage', (data) => {\n    //     console.log('Received message:', data);\n    //     displayMessage(data.senderEmail, data.message);\n    // });\n\n    newSocket.on(\"receiveMessage\", ({ senderEmail, message, messageId,time }) => {\n      setReceivedMessages((prevMessages) => [\n        ...prevMessages,\n        { senderEmail, message, messageId, received: false,time},\n      ]);\n    });\n    newSocket.on(\"messageHasBeenRead\", ({ messageId }) => {\n      setReceivedMessages((prevMessages) =>\n        prevMessages.map((msg) =>\n          msg.messageId === messageId ? { ...msg, received: true } : msg\n        )\n      );\n    });\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [senderEmail]);\n\n\n  const handleSendMessage = async () => {\n    const time = Date.now();\n    try {\n      const response = await axios.post(\n        `${baseURL_}/message/send`,\n        { senderEmail, receiverEmail, message }\n      );\n      console.log(\"Sent message\", response.data.message);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    if (socket) {\n      socket.emit(\"sendMessage\", { senderEmail, receiverEmail, message,time: time });\n      setReceivedMessages((prevChat) => [\n        ...prevChat,\n        { senderEmail, message, time: time, received: false },\n      ]);\n      setMessage(\"\");\n    }\n  };\n  const sendMessageReadConfirmation = (messageId) => {\n    socket.emit(\"messageRead\", { messageId });\n  };\n  const handleReadConfirmation = (messageId) => {\n    // Xử lý sự kiện khi người dùng xác nhận tin nhắn đã đọc\n    sendMessageReadConfirmation(messageId);\n  };\n\n\n  return (\n    // <div>\n    //   <h1>Chat</h1>\n    //   <div>\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Your ID\"\n    //       value={senderEmail}\n    //       onChange={(e) => setSenderEmail(e.target.value)}\n    //     />\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Receiver ID\"\n    //       value={receiverEmail}\n    //       onChange={(e) => setReceiverEmail(e.target.value)}\n    //     />\n    //   </div>\n    //   <div>\n    //     <input\n    //       type=\"text\"\n    //       placeholder=\"Message\"\n    //       value={message}\n    //       onChange={(e) => setMessage(e.target.value)}\n    //     />\n    //     <button onClick={handleSendMessage}>Send</button>\n    //   </div>\n    //   <div>\n    //     {receivedMessages.map((msg, index) => (\n    //       <div key={index}>\n    //         <strong>{msg.senderEmail}</strong>: {msg.message}{\" \"}\n    //         {msg.received ? \"(Read)\" : \"(Unread)\"}\n    //         {!msg.received && (\n    //           <button onClick={() => handleReadConfirmation(msg.messageId)}>\n    //             Mark as Read\n    //           </button>\n    //         )}\n    //       </div>\n    //     ))}\n    //   </div>\n    // </div>\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {receivedMessages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${\n              msg.senderEmail === senderEmail ? \"sent-message\" : \"received-message\"\n            }`}\n          >\n            <strong>{msg.senderEmail}</strong>: {msg.message}\n            {msg.received ? \" (Read)\" : \" (Unread)\"}\n            {!msg.received && msg.senderEmail !== senderEmail && (\n              <button onClick={() => handleReadConfirmation(msg.messageId)}>Mark as Read</button>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Your ID\"\n          value={senderEmail}\n          onChange={(e) => setSenderEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Receiver ID\"\n          value={receiverEmail}\n          onChange={(e) => setReceiverEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}